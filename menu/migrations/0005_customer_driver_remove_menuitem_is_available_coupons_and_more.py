# Generated by Django 5.1.6 on 2025-09-01 00:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0005_customerprofile_referral_code_and_more'),
        ('menu', '0004_menuitemavailability'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.RemoveField(
            model_name='menuitem',
            name='is_available',
        ),
        migrations.CreateModel(
            name='Coupons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('coupon_type', models.CharField(choices=[('delivery', 'Free-delivery'), ('itemdiscount', 'Amount-off-an-Item'), ('categorydiscount', 'Amount-off-a-category'), ('BxGy', 'Buy-X-Get-Y')], default='delivery', max_length=30)),
                ('buy_amount', models.PositiveIntegerField(default=0)),
                ('get_amount', models.PositiveIntegerField(default=0)),
                ('scope', models.CharField(choices=[('global', 'Platform-wide'), ('restaurant', 'Restaurant-only')], default='restaurant', max_length=20)),
                ('discount_type', models.CharField(choices=[('percent', 'Percent'), ('amount', 'Fixed-amount')], default='percent', max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('max_uses', models.PositiveIntegerField(blank=True, null=True)),
                ('uses_count', models.PositiveIntegerField(default=0)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coupons', to='menu.menucategory')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coupons', to='menu.menuitem')),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coupons', to='accounts.restaurant')),
            ],
        ),
        migrations.AddField(
            model_name='menuitem',
            name='favorite',
            field=models.ManyToManyField(to='menu.customer'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_price', models.DecimalField(decimal_places=5, default=0, max_digits=10)),
                ('ovena_commision', models.DecimalField(decimal_places=2, default=10, max_digits=5)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('discount_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('preparing', 'Preparing'), ('ready', 'Ready for Pickup'), ('on_the_way', 'On the Way'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='accounts.branch')),
                ('coupons', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coupons', to='menu.coupons')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='menu.driver')),
                ('orderer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='menu.customer')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_total', models.DecimalField(decimal_places=5, default=0, max_digits=12)),
                ('price', models.DecimalField(decimal_places=5, default=0, max_digits=12)),
                ('added_total', models.DecimalField(decimal_places=5, default=0, max_digits=12)),
                ('discount_amount', models.DecimalField(decimal_places=5, default=0, max_digits=12)),
                ('quantity', models.SmallIntegerField(default=1)),
                ('is_available', models.BooleanField(default=True)),
                ('addons', models.ManyToManyField(to='menu.menuitemaddon')),
                ('menu_availability', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='menu.menuitemavailability')),
                ('menu_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='menu.menuitem')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='menu.order')),
                ('variants', models.ManyToManyField(to='menu.variantoption')),
            ],
        ),
    ]
